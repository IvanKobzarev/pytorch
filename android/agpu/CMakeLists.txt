cmake_minimum_required(VERSION 3.4.1)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_CXX_FLAGS "-fno-inline -fno-omit-frame-pointer")

INCLUDE(GNUInstallDirs)

project (agpu)

option(AGPU_OPENGL "Enable OpenGL" ON)
option(AGPU_VULKAN "Enable Vulkan" OFF)

SET(AGPU_LIBRARY_TYPE "default" CACHE STRING "Type of library (shared, static, or default) to build")
SET_PROPERTY(CACHE AGPU_LIBRARY_TYPE PROPERTY STRINGS default static shared)

message(STATUS "\tSystem: ${CMAKE_SYSTEM_NAME}")
message(STATUS "\tProcessor: ${CMAKE_SYSTEM_PROCESSOR}")
message(STATUS "\tOpenGL: ${AGPU_OPENGL}")
message(STATUS "\tVulkan: ${AGPU_VULKAN}")
message(STATUS "\tBuild Path: ${CMAKE_CURRENT_BINARY_DIR}")

FILE(GLOB AGPU_SRCS ${CMAKE_CURRENT_LIST_DIR}/src/*.cpp)

IF(AGPU_LIBRARY_TYPE STREQUAL "default")
  ADD_LIBRARY(agpu ${AGPU_SRCS})
ELSEIF(AGPU_LIBRARY_TYPE STREQUAL "shared")
  ADD_LIBRARY(agpu SHARED ${AGPU_SRCS})
ELSEIF(AGPU_LIBRARY_TYPE STREQUAL "static")
  ADD_LIBRARY(agpu STATIC ${AGPU_SRCS})
ELSE()
  MESSAGE(FATAL_ERROR "Unsupported AGPU library type")
ENDIF()

SET_TARGET_PROPERTIES(agpu PROPERTIES
  CXX_STANDARD 14
  C_STANDARD 11
  C_EXTENSIONS YES)

TARGET_INCLUDE_DIRECTORIES(agpu PUBLIC src)

SET_TARGET_PROPERTIES(agpu PROPERTIES PUBLIC_HEADER src/agpu.h)

if (ANDROID_ABI)
target_link_libraries(agpu EGL GLESv3)
else()
target_link_libraries(agpu)
endif()

INSTALL(TARGETS agpu
   LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
   ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
   PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

