apply plugin: 'com.android.application'

repositories {
    jcenter()
}

def props = new Properties()
file("../gradle.properties").withInputStream { props.load(it) }

def buildConfigProps = { k -> "\"${props.get(k)}\"" }

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "org.pytorch.testapp"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        ndk {
            abiFilters ABI_FILTERS.split(",")
        }
        buildConfigField ("String", "MODULE_ASSET_NAME", buildConfigProps('MODULE_ASSET_NAME'))
        buildConfigField ("String", "LOGCAT_TAG", "@string/app_name")
        addManifestPlaceholders([APP_NAME: "@string/app_name"])
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
    }
    flavorDimensions "model"
    productFlavors {
        mobilenetQuant {
            dimension "model"
            applicationIdSuffix ".mobilenetQuant"
            buildConfigField ("String", "MODULE_ASSET_NAME", buildConfigProps('MODULE_ASSET_NAME_MOBILENET_QUANT'))
            addManifestPlaceholders([APP_NAME: "PyMobileNetQuant"])
            buildConfigField ("String", "LOGCAT_TAG", "\"pytorch-mobilenet\"")
        }
        resnet {
            dimension "model"
            applicationIdSuffix ".resnet"
            buildConfigField ("String", "MODULE_ASSET_NAME", buildConfigProps('MODULE_ASSET_NAME_RESNET18'))
            addManifestPlaceholders([APP_NAME: "PyResnet"])
            buildConfigField ("String", "LOGCAT_TAG", "\"pytorch-resnet\"")
        }
    }
    packagingOptions {
        pickFirst '**/libfbjni.so'
        doNotStrip '**.so'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'

    implementation project(':pytorch_android')
    implementation project(':pytorch_android_torchvision')
}
